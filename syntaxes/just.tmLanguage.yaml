---
"$schema": https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json
scopeName: source.just
name: Just

patterns:
  - include: "#interpolate"
  - include: "#comments"
  - include: "#scripts"
  - include: "#strings"
  - include: "#assignments"
  - include: "#recipeDefinition"
  - include: "#keywords"

repository:
  comments:
    patterns:
      - name: comment.line.just
        match: "^#[^!].*"

  scripts:
    patterns:
      - include: "#scripts_js"
      - include: "#scripts_lua"
      - include: "#scripts_perl"
      - include: "#scripts_ruby"
      - include: "#scripts_python"
      - include: "#scripts_shell"

  scripts_python:
    patterns:
      - name: markup.fenced_code.block.just
        begin: "^\\s+(#!\\s*(?:/usr)?/bin/(?:env\\s+)?)(python(?:-?\\d+(?:\\.\\d+)?)?)(?:\\s|$)"
        end: "^$"
        beginCaptures:
          "1": 
            name: comment.line.shebang.just
          "2":
            name: keyword.other
        contentName: meta.embedded.block.python
        patterns:
          - include: source.python

  scripts_js:
    patterns:
      - name: markup.fenced_code.block.just
        begin: "^\\s+(#!\\s*(?:/usr)?/bin/(?:env\\s+)?)(node(?:js)?)(?:\\s|$)"
        end: "^$"
        beginCaptures:
          "1": 
            name: comment.line.shebang.just
          "2":
            name: keyword.other
        contentName: meta.embedded.block.javascript
        patterns:
          - include: source.js

  scripts_perl:
    patterns:
      - name: markup.fenced_code.block.just
        begin: "^\\s+(#!\\s*(?:/usr)?/bin/(?:env\\s+)?)(perl)(?:\\s|$)"
        end: "^$"
        beginCaptures:
          "1":
            name: comment.line.shebang.just
          "2":
            name: keyword.other
        contentName: meta.embedded.block.perl
        patterns:
          - include: source.perl

  scripts_ruby:
    patterns:
      - name: markup.fenced_code.block.just
        begin: "^\\s+(#!\\s*(?:/usr)?/bin/(?:env\\s+)?)(ruby-?(?:-?\\d+(?:\\.\\d+)?)?)(?:\\s|$)"
        end: "^$"
        beginCaptures:
          "1":
            name: comment.line.shebang.just
          "2":
            name: keyword.other
        contentName: meta.embedded.block.ruby
        patterns:
          - include: source.ruby

  scripts_lua:
    patterns:
      - name: markup.fenced_code.block.just
        begin: "^\\s+(#!\\s*(?:/usr)?/bin/(?:env\\s+)?)(lua(?:-?\\d+(?:\\.\\d+)?)?)(?:\\s|$)"
        end: "^$"
        beginCaptures:
          "1":
            - name: comment.line.shebang.just
          "2":
            name: keyword.other
        contentName: meta.embedded.block.lua
        patterns:
          - include: source.lua

  scripts_shell:
    patterns:
      - name: markup.fenced_code.block.just
        begin: "^\\s+(#!\\s*(?:/usr)?/bin/(?:env\\s+)?)((?>fi|ba|c|k|z)?sh)(?:\\s|$)"
        end: "^$"
        beginCaptures:
          "1":
            name: comment.line.shebang.just
          "2":
            name: keyword.other
        contentName: meta.embedded.block.shellscript
        patterns:
          - include: source.shell
      - name: markup.inline.raw.just
        begin: "`"
        end: "`"
        contentName: meta.embedded.line.shellscript
        patterns:
          - include: source.shell

  strings:
    patterns:
      - name: string.quoted.double.just
        begin: "\""
        end: "\""
      - name: string.quoted.single.just
        begin: "'"
        end: "'"

  assignments:
    patterns:
      - match: "^((?:export|set)\\s+)?([a-zA-Z_][a-zA-Z0-9_-]*)\\s*:?="
        captures:
          "1":
            name: storage.type.just
          "2":
            name: variable.name.just

  recipeDefinition:
    patterns:
      - match: "^(@)?([a-zA-Z_][a-zA-Z0-9_-]*)([a-zA-Z0-9=\\s_-`'\"]*):([\\sa-zA-Z0-9_-]*).*$"
        captures:
          "1":
            name: entity.name.function.just
          "2":
            name: entity.name.function.just
          "3":
            patterns:
              - name: constant.character.escape.just
                match: "[\\s]*[a-zA-Z0-9-_]*(=?)(.*)"
                captures:
                  "0":
                    name: variable.name.just
                  "1":
                    name: constant.other.just
                  "2":
                    name: variable.parameter.just
          "4":
            name: support.type.property-name.just

  interpolate:
    patterns:
      - name: string.interpolated.just
        begin: "\\{\\{"
        end: "\\}\\}"

  keywords:
    patterns:
      - name: keyword.control.just
        match: "\\b(arch|os|os_family|env_var|env_var_or_default)\\b"
