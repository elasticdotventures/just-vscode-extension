{
  "name": "justlang-lsp",
  "publisher": "promptexecution",
  "displayName": "justlang-lsp",
  "description": "",
  "icon": "robot.png",
  "license": "MIT",
  "licenseText": "MIT License\n\nCopyright (c) 2025 Brian H &amp; others",
  "categories": [
    "Other",
    "Programming Languages",
    "Debuggers",
    "Formatters"
  ],
  "keywords": [
    "justfile",
    "just",
    "task runner",
    "mcp",
    "workflow",
    "cli"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/elasticdotventures/just-vscode-extension.git"
  },
  "version": "1.0.5",
  "engines": {
    "vscode": "^1.102.0"
  },
  "activationEvents": [
    "onTaskType:just",
    "onFileSystem:justfile",
    "onFileSystem:.justfile"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "justlang",
        "aliases": [
          "JustLang",
          "justlang"
        ],
        "filenames": [],
        "extensions": [],
        "configuration": "./language-configuration.json",
        "icon": {
          "light": "icons/robot.png",
          "dark": "icons/robot.png"
        }
      },
      {
        "id": "just",
        "aliases": [
          "Just",
          "just"
        ],
        "filenames": [
          "justfile",
          "Justfile",
          ".justfile",
          ".just"
        ],
        "extensions": [
          ".justfile",
          ".just"
        ],
        "configuration": "./language-configuration.json",
        "icon": {
          "light": "icons/robot.png",
          "dark": "icons/robot.png"
        }
      }
    ],
    "grammars": [
      {
        "language": "justlang",
        "scopeName": "source.just",
        "path": "syntaxes/just.tmLanguage.json",
        "embeddedLanguages": {
          "meta.embedded.block.js": "javascript",
          "meta.embedded.block.lua": "lua",
          "meta.embedded.block.perl": "perl",
          "meta.embedded.block.python": "python",
          "meta.embedded.block.ruby": "ruby",
          "meta.embedded.block.shellscript": "shellscript"
        }
      },
      {
        "language": "just",
        "scopeName": "source.just",
        "path": "syntaxes/just.tmLanguage.json",
        "embeddedLanguages": {
          "meta.embedded.block.js": "javascript",
          "meta.embedded.block.lua": "lua",
          "meta.embedded.block.perl": "perl",
          "meta.embedded.block.python": "python",
          "meta.embedded.block.ruby": "ruby",
          "meta.embedded.block.shellscript": "shellscript"
        }
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Just Language Server",
      "properties": {
        "justlang-lsp.server.path": {
          "type": "string",
          "default": "",
          "description": "Path to the just-lsp executable. If not specified, it will be searched for in the system PATH."
        },
        "justlang-lsp.debug.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable debug logging for the just-lsp server. Logs will be written to justlang_lsp.log in the workspace root."
        },
        "justlang-lsp.enableLsp": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the Just LSP provider. Unchecking this will unload the LSP dynamically."
        },
        "justlang-lsp.enableJustfileWatcher": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the Justfile watcher subsystem."
        },
        "justlang-lsp.enableGrammar": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the Justfile grammar/language configuration subsystem."
        },
        "justlang-lsp.enableTaskProvider": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the JustTaskProvider subsystem."
        },
        "justlang-lsp.logSubsystems": {
          "type": "boolean",
          "default": false,
          "description": "Enable verbose logging for all Just extension subsystems (LSP, watcher, grammar, task provider)."
        },
        "justlang-lsp.justPath": {
          "type": "string",
          "default": "just",
          "description": "Path to the just executable. If not specified, 'just' will be used from PATH."
        },
        "justlang-lsp.runInTerminal": {
          "type": "boolean",
          "default": false,
          "description": "Run recipes in VSCode terminal instead of background process with output channel."
        },
        "justlang-lsp.useSingleTerminal": {
          "type": "boolean",
          "default": false,
          "description": "Use a single terminal instance for all recipe executions (requires runInTerminal to be enabled)."
        },
        "justlang-lsp.logLevel": {
          "type": "string",
          "enum": [
            "info",
            "warning",
            "error",
            "none"
          ],
          "default": "info",
          "description": "Set the log level. Recipe output is logged at the info level."
        },
        "justlang-lsp.shell": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Set command used to invoke recipes and evaluate backticks on Unix systems. Example: ['bash', '-c']"
        },
        "justlang-lsp.windowsShell": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Set the command used to invoke recipes on Windows. Example: ['powershell.exe', '-Command']"
        }
      }
    },
    "taskDefinitions": [
      {
        "type": "just",
        "when": "shellExecutionSupported",
        "required": [
          "task",
          "dir"
        ],
        "properties": {
          "task": {
            "type": "string",
            "description": "The Just recipe to run."
          },
          "dir": {
            "type": "string",
            "description": "The working directory for the Just task."
          },
          "promptForArgs": {
            "type": "boolean",
            "description": "Whether to prompt for additional arguments before running the task.",
            "default": false
          },
          "flakeExists": {
            "type": "boolean",
            "description": "Whether a flake.nix file exists in the workspace.",
            "default": false
          }
        }
      }
    ],
    "taskGroups": [
      {
        "id": "just",
        "label": "Justfile",
        "isDefault": true
      }
    ],
    "commands": [
      {
        "command": "justlang-lsp.run_recipe",
        "title": "Just: Run Recipe",
        "category": "Just"
      },
      {
        "command": "just-lsp.show_recipes",
        "title": "Just: Show All Recipes",
        "category": "Just"
      },
      {
        "command": "just-lsp.install",
        "title": "Just: Install/Update just-lsp Server",
        "category": "Just"
      }
    ],
    "files": [
      "dist",
      "syntaxes",
      "justfile",
      "language-configuration.json",
      "package.json"
    ]
  },
  "scripts": {
    "vscode:prepublish": "pnpm run package",
    "compile": "pnpm run check-types && pnpm run lint && node esbuild.js",
    "test-local": "mocha ./src/test/language-configuration-accessibility.test.ts",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "pnpm run check-types && pnpm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "NODE_OPTIONS='--import=tsx' mocha --recursive ./src/test/**/*.test.ts",
    "commit": "cz",
    "release": "semantic-release",
    "prepare": "husky"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@types/mocha": "^10.0.10",
    "@types/node": "~24.0.15",
    "@types/vscode": "^1.102.0",
    "@typescript-eslint/eslint-plugin": "^8.38.0",
    "@typescript-eslint/parser": "^8.38.0",
    "@vscode/test-cli": "github:fungible-farm/vscode-test-cli#feature/bump-package-versions",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.6.0",
    "c8": "^10.1.3",
    "commitizen": "^4.3.1",
    "cz-conventional-changelog": "^3.3.0",
    "esbuild": "^0.25.8",
    "eslint": "^9.31.0",
    "husky": "^9.1.7",
    "mocha": "11.7.1",
    "npm-run-all": "^4.1.5",
    "semantic-release": "^24.2.7",
    "semantic-release-vsce": "^6.0.11",
    "test-exclude": "^7.0.1",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.3",
    "typescript": "^5.8.3"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "dependencies": {
    "@types/mdast": "^4.0.4",
    "@types/natural-compare": "^1.4.3",
    "@typescript-eslint/rule-tester": "^8.38.0",
    "@vitest/coverage-v8": "^3.2.4",
    "cross-fetch": "^4.1.0",
    "glob": "^11.0.3",
    "json-schema": "^0.4.0",
    "jsonc-parser": "^3.3.1",
    "markdown-table": "^3.0.4",
    "marked": "^16.1.1",
    "mdast-util-from-markdown": "^2.0.2",
    "mdast-util-mdx": "^3.0.0",
    "prettier": "^3.6.2",
    "rimraf": "^6.0.1",
    "title-case": "^4.3.2",
    "unist-util-visit": "^5.0.0",
    "vitest": "^3.2.4",
    "vscode-languageclient": "^9.0.1"
  }
}
